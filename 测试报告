
悦牙云项目测试报告
1 简介
1.1  编写目的
本文档用于记录测试过程，总结各轮次的测试情况，分析测试数据，归纳测试工作进行过程中暴露的问题与遗留的风险，给出相应的测试建议以供后续项目参考。

1.2  测试内容
本次的测试内容是对悦牙云APP的安卓版本和iOS版本，以及后台管理系统进行全部的功能测试。
2 测试概要

2.1  测试时间
整个悦牙云APP项目的测试时间从2021年10月29日开始到2022年1月6止，期间各阶段测试工作情况如下：

工作阶段	开始时间（包含当天）	结束时间（包含当天）	工作量（天数）
需求确认，评审，测试用例编写	2021.10.29	2021.11.5	6
安卓版本-第一轮系统测试	2021.11.8	2021.11.10	3
安卓版本-第二轮回归测试	2021.11.29	2021.12.1	3
安卓版本-第三轮回归测试	2021.12.6	2021.12.7	2
安卓版本-第四轮回归测试	2021.12.27	2021.12.28	2
安卓版本-第五轮回归测试	2021.12.29	2021.12.29	1
安卓版本-第六轮验收测试	2022.1.6	2022.1.6	1
iOS版本-第一轮系统测试	2021.12.16	2021.12.17	2
iOS版本-第二轮回归测试	2021.12.27	2021.12.28	2
iOS版本-第三轮回归测试	2021.12.29	2021.12.30	2
iOS版本-第四轮验收测试	2022.1.6	2022.1.6	1
后台管理系统-第一轮系统测试	2021.11.10	2021.11.11	2
后台管理系统-第二轮回归测试	2021.11.29	2021.12.1	3
后台管理系统-第三轮验收测试	2022.1.6	2022.1.6	1


2.2  测试范围
本次测试主要是UI测试和功能测试。以下是悦牙云项目的主要测试功能和权重级别（级别分为A,B,C三级，A级最高，B级其次，C级较低）。

悦牙云APP的主要功能和权重级别如下：
功能模块	功能点	权重级别
注册登录	启动页	B
	短信验证码登陆	A
	微信三方登陆	A
用户信息	修改名称,性别	C
	编辑头像	C
	修改手机号	B
	微信解绑	B
	使用指南	C
	公众号分享	C
	意见反馈	C
	退出登陆	A
设备信息	配网	A
	刷牙记录	A
	口腔报告列表	A
	口腔报告详情	A
	拍照记录	A
	生成报告	A
	推荐产品	C
	邀请用户	A
	已邀好友列表	A
	删除已邀好友	B
	确定绑定分享的牙刷	A
	设备列表	A
	修改设备名称	C
	设备详情	A
	设备升级	B
	解绑设备	B
消息通知	通知列表	A
	消息已读	A
	消息详情	A
	删除消息 （新增）	C

悦牙云后台管理系统的主要功能和权重级别如下：
功能模块	功能点	权重级别
系统管理	账户管理	A
	角色管理	B
	菜单管理	B
	权限管理	B
用户管理	用户列表（查询、导出、修改手机号）	A
	用户统计	C
设备管理	设备列表（查询、导出）	A
	设备统计	C
	邀请列表	A
	邀请统计	C
内容管理	报告管理	A
	通知管理	A
	指南管理	B
	推荐管理	B
	 意见反馈	B


2.3  测试用例
根据需求文档，此项目一共编写了1584条测试用例，其中APP测试用例1184条，后台管理系统400条。
2.4  测试策略
1. 测试类型：按阶段划分定义为系统测试，回归测试和验收测试。
2. 整个测试阶段分三轮进行，基本策略如下：
第一轮为系统测试，测试范围覆盖以上描述的所有范围，关注所有级别的bug；
第二轮为回归测试，回归测试所有已修复的bug，对权重为A、B的模块进行功能测试，权重为C的模块进行冒烟测试；
第三轮为验收测试，对所有出现过bug的模块进行验收测试，对所有模块系统测试。
每轮测试开始前都进行快速的冒烟测试，通过冒烟确信系统可测时进入下一轮系统
3. 缺陷评估：每轮测试结束后都组织开发工程师、产品工程师等共同评估产品缺陷，评估内容包括缺陷解决方案、是否涉及需求变更、下一轮开始时间及是否可以结束测试等。

3 测试结果
APP测试过程中发现缺陷数量以及缺陷在各模块中的分布情况如下：
功能点	权重级别	安卓版本缺陷数量	iOS版本缺陷数量	安卓版本缺陷占比	iOS版本缺陷占比
启动页	B	1	0	0.62%	0.00%
短信验证码登陆	A	6	6	3.70%	7.32%
微信三方登陆	A	5	4	3.09%	4.88%
修改名称,性别	C	5	4	3.09%	4.88%
编辑头像	C	2	3	1.23%	3.66%
修改手机号	B	6	4	3.70%	4.88%
微信解绑	B	3	0	1.85%	0.00%
使用指南	C	0	0	0.00%	0.00%
公众号分享	C	1	2	0.62%	2.44%
意见反馈	C	18	7	11.11%	8.54%
退出登陆	A	2	0	1.23%	0.00%
配网	A	10	14	6.17%	17.07%
刷牙记录	A	6	7	3.70%	8.54%
口腔报告列表	A	6	3	3.70%	3.66%
口腔报告详情	A	8	1	4.94%	1.22%
拍照记录	A	10	4	6.17%	4.88%
生成报告	A	16	5	9.88%	6.10%
推荐产品	C	0	0	0.00%	0.00%
邀请用户	A	22	9	13.58%	10.98%
已邀好友列表	A	5	1	3.09%	1.22%
删除已邀好友	B	4	0	2.47%	0.00%
确定绑定分享的牙刷	A	3	0	1.85%	0.00%
设备列表	A	6	2	3.70%	2.44%
修改设备名称	C	6	2	3.70%	2.44%
设备详情	A	3	0	1.85%	0.00%
设备升级	B	1	0	0.62%	0.00%
解绑设备	B	0	0	0.00%	0.00%
通知列表	A	2	1	1.23%	1.22%
消息已读	A	3	2	1.85%	2.44%
消息详情	A	2	1	1.23%	1.22%
删除消息 （新增）	C	0	0	0.00%	0.00%
总计	/	162	82	100.00%	100.00%

后台管理系统测试过程中发现缺陷数量以及缺陷在各模块中的分布情况如下：
功能点	权重级别	缺陷数量	缺陷占比
账户管理	A	10	43.48%
角色管理	B	1	4.35%
菜单管理	B	0	0.00%
权限管理	B	3	13.04%
用户列表（查询、导出、修改手机号）	A	3	13.04%
用户统计	C	0	0.00%
设备列表（查询、导出）	A	0	0.00%
设备统计	C	0	0.00%
邀请列表	A	0	0.00%
邀请统计	C	0	0.00%
报告管理	A	2	8.70%
通知管理	A	2	8.70%
指南管理	B	1	4.35%
推荐管理	B	0	0.00%
 意见反馈	B	1	4.35%
总计	/	23	100.00%

安卓版本，iOS版本和后台管理系统各轮缺陷数量统计如下：
测试系统	轮数	缺陷数量
安卓版本	第一轮测试	80
	第二轮测试	36
	第三轮测试	29
	第四轮测试	7
	第五轮测试	10
iOS版本	第一轮测试	63
	第二轮测试	15
	第三轮测试	4
后台管理系统	第一轮测试	18
	第二轮测试	5





4 结果分析
4.1  缺陷级别分析

整个项目测试过程中累计发现缺陷267个，其中A级缺陷192个，B级25个，C级50个。其中A级缺陷占总缺陷的71.91%，属于严重缺陷偏多。
4.2  缺陷模板分析

在整个项目中APP缺陷较多的模块是意见反馈，配网，生成报告和邀请用户，其中配网，生成报告和邀请用户都是APP的主要功能，这说明系统在测试过程中处于不稳定状态，存在大量较为严重的问题。
4.3  整体缺陷分析
整个项目测试过程中累计发现缺陷267个，其中APP安卓版本为162，iOS版本为82个，后台管理系统为32个。整个项目的缺陷占测试用例的16.85%，也就是测试用例通过率为83.15%，按照测试用例通过率要达到95%以上才算正常的标准，该项目整体属于问题缺陷偏多。


5 结论，问题和建议
5.1  结论
经过前后多轮的测试，目前已发现的问题都已全部解决，系统功能已趋于稳定，且项目确定的范围、策略和计划均已实现，项目测试可以结束。
5.2  问题
1.需求问题
此项目虽然有需求文档和UI设计原型流程图，但给到的需求资料中存在需求分析不完整、需求描述不清晰，需求文档的逻辑性、可读性、可实现性、可测试性比较差，需求的歧义性较大等问题。从而感觉在整个测试过程中不断地在挖掘需求、确认需求、变更需求和评审需求。
2.变更控制问题
在整个测试过程中存在较大的需求变更问题，一直在确认和变更需求，且需求变更的机制没有规约，一个微信或是一个口头传达就可能变更需求。这导致在测试过程中增加了测试难度，降低了测试质量，影响了测试进度。
3.版本控制问题。
因为项目的版本是由开发负责人员进行管理，且开发人员因为在测试过程中会不断的解决问题，导致每次解决一两个问题就有可能会发布一个新版本，从而导致难以保证每轮测试版本的清晰、和发布版本与测试版本的一致性。
4.测试环境问题。
测试期间测试环境和开发环境没有做分离，导致测试和开发修复缺陷不能并行，导致测试期间有开发工程师直接在测试环境上修复缺陷和修改测试环境的情况。

5.3  建议
1.遗留缺陷
建议在项目上线在后续版本中解决遗留缺陷，以提升产品的稳定性和用户体验。
2.需求建议。
建议进一步加强需求收集、分析、确认和评审过程，进一步提升需求文档的质量。减少需求的歧义性，提升需求的完整性、描述的清晰性、一致性、可读性、可实现性和可测试性。同时建议在后续项目中能对需求文档，设计文档（如UI等）进行评审，以增强产品的使用性、提升用户体验。
3.变更控制
建议在后续项目中进一步加强变更控制策略和规约制定，并强化变更控制规约的执行。不怕变更，关键要控制好变更的时机和策略。
4.版本控制
加强版本控制策略，以保证测试版本的清晰性、发布/上线版本和最终测试版本的一致性。
5.测试环境
期望在后续项目中测试环境和开发环境完全分开，或阶段性完全独立，且各部分环境有专门的接口人负责，在测试期间严格禁止在测试环境上修复缺陷或更改环境配置（如确实需要更改配置，请提前通知测试及其它相关负责人）。以减少因此带来的沟通、反复侦测的成本。
6.项目管理
主要是建议加强项目的计划性，诸如：进度计划、人力资源计划、风险预防机制等，这也将更利于项目成员间高效的配合。大家能更适时的、更合理的制定各自工作计划，也更清楚到什么时候我会输出什么、我将配合他人做些什么。减少项目进行过程中的紧张和慌乱、项目也变得更加易控和可控。
